#include<iostream>
#include<stack>
#include<string>
using namespace std;

char a[600000]; // 입력받는 소문자 배열 

int main() {
	
	cin >> a; // 소문자 문자 
	stack<char> left; // 왼쪽 스택
	stack<char> right; // 오른쪽 스택 
	int len = strlen(a); // 입력받은 소문자 개수 
	
	for (int i = 0; i < len; i++) {
		left.push(a[i]); // 초기에 커서가 맨 오른쪽 끝에 가있으므로 left배열에 push
	}
	int num; // 명령어 개수
	cin >> num;
	
	while (num--) {
		char cmd;
		cin >> cmd;

		if (cmd == 'L') { // 왼쪽으로 커서 한칸 옮기기 
			if (!left.empty()) { 
				right.push(left.top()); //오른쪽 스택에 왼쪽 top push
				left.pop();
			}
		}
			else if (cmd == 'D') { // 오른쪽으로 커서 한칸 옮기기
				if (!right.empty()) {
					left.push(right.top()); // 왼쪽 스택에 오른쪽 top push
					right.pop();
				}

			}
			else if (cmd == 'B') { // 커서 왼쪽 값을 하나 삭제 
				if (!left.empty()) {
					left.pop(); // 왼쪽 스택의 탑을 삭제 
				}
			}
			else if (cmd == 'P') { // P명령어 다음 문자를 커서 왼쪽에 추가
				char n;
				cin >> n;
				left.push(n); // 왼쪽 스택에 입력받은 N값 추가 
			}
		
	}
	// 편집된 내용들을 출력해주기 위함. 출력할때는 top을 쓰기때문에 
	//왼쪽 스택같은 경우에는 거꾸로 읽힌다. 이를 방지하기 위해 오른쪽 스택에 전부 옮겨주고, 이를 한번에 출력한다. 
	while (!left.empty()) { 
		right.push(left.top());
		left.pop();
	}
	while (!right.empty()) {
		cout << right.top();
		right.pop();
	}
	cout << "\n";
	return 0; 
}

